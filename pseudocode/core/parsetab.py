
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN ATUNCI COMMA CONST DIV DIVIDE ELSE ENDFOR ENDFUNCTION ENDIF ENDWHILE EQUAL EXECUTA FALSE FOR FUNCTION GEQUAL GREATER ID IF LEQUAL LOWER LPAREN MINUS MOD NEQUAL PLUS PRINT READ REPEAT RETURN RPAREN TIMES TRUE UNTIL WHILEprogram : func_l_op l_op\n                   | l_opl_op : op\n                | op l_opfunc_l_op : func\n                     | func func_l_opar_op : add\n                 | mul\n                 | sub\n                 | div\n                 | rdiv\n                 | modadd : ID PLUS ID\n               | CONST PLUS ID\n               | ID PLUS CONST\n               | CONST PLUS CONSTsub : ID MINUS ID\n               | CONST MINUS ID\n               | ID MINUS CONST\n               | CONST MINUS CONSTmul : ID TIMES ID\n               | CONST TIMES ID\n               | ID TIMES CONST\n               | CONST TIMES CONSTdiv : ID DIV ID\n               | CONST DIV ID\n               | ID DIV CONST\n               | CONST DIV CONSTrdiv : ID DIVIDE ID\n                | CONST DIVIDE ID\n                | ID DIVIDE CONST\n                | CONST DIVIDE CONSTmod : ID MOD ID\n               | CONST MOD ID\n               | ID MOD CONST\n               | CONST MOD CONSTattr : ID ASSIGN ID\n                | ID ASSIGN CONST\n                | ID ASSIGN ar_op\n                | ID ASSIGN TRUE\n                | ID ASSIGN FALSE\n                | ID ASSIGN func_callret_op : RETURN ID\n                   | RETURN CONST\n                   | RETURN ar_op\n                   | RETURN func_callop : ar_op\n              | attr\n              | write\n              | read\n              | func_call\n              | repeat\n              | ret_op\n              | if\n              | while\n              | for\n              cond : TRUE\n                | FALSE\n                | cond_opcond_op : ID LOWER ID\n                   | ID LOWER CONST\n                   | CONST LOWER ID\n                   | CONST LOWER CONST\n                   | ID GREATER ID\n                   | ID GREATER CONST\n                   | CONST GREATER ID\n                   | CONST GREATER CONST\n                   | ID LEQUAL ID\n                   | ID LEQUAL CONST\n                   | CONST LEQUAL ID\n                   | CONST LEQUAL CONST\n                   | ID GEQUAL ID\n                   | ID GEQUAL CONST\n                   | CONST GEQUAL ID\n                   | CONST GEQUAL CONST\n                   | ID EQUAL ID\n                   | ID EQUAL CONST\n                   | CONST EQUAL ID\n                   | CONST EQUAL CONST\n                   | ID NEQUAL ID\n                   | ID NEQUAL CONST\n                   | CONST NEQUAL ID\n                   | CONST NEQUAL CONST\n                   | ar_op LOWER ar_op\n                   | ar_op GREATER ar_op\n                   | ar_op LEQUAL ar_op\n                   | ar_op GEQUAL ar_op\n                   | ar_op EQUAL ar_op\n                   | ar_op NEQUAL ar_op\n                   | ar_op LOWER ID\n                   | ar_op GREATER ID\n                   | ar_op LEQUAL ID\n                   | ar_op GEQUAL ID\n                   | ar_op EQUAL ID\n                   | ar_op NEQUAL ID\n                   | ID LOWER ar_op\n                   | ID GREATER ar_op\n                  | ID LEQUAL ar_op\n                  | ID GEQUAL ar_op\n                  | ID EQUAL ar_op\n                  | ID NEQUAL ar_op\n                  | ar_op LOWER CONST\n                  | ar_op GREATER CONST\n                  | ar_op LEQUAL CONST\n                  | ar_op GEQUAL CONST\n                  | ar_op EQUAL CONST\n                  | ar_op NEQUAL CONST\n                  | CONST LOWER ar_op\n                  | CONST GREATER ar_op\n                  | CONST LEQUAL ar_op\n                  | CONST GEQUAL ar_op\n                  | CONST EQUAL ar_op\n                  | CONST NEQUAL ar_op\n        if : IF cond ATUNCI l_op ENDIF\n              | IF cond ATUNCI l_op ELSE l_op ENDIFwhile : WHILE cond EXECUTA l_op ENDWHILEfor : FOR ID ASSIGN ID COMMA ID EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN CONST COMMA ID EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN ID COMMA CONST EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN CONST COMMA CONST EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN ID COMMA ID COMMA CONST EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN CONST COMMA ID COMMA CONST EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN ID COMMA CONST COMMA CONST EXECUTA l_op ENDFOR\n               | FOR ID ASSIGN CONST COMMA CONST COMMA CONST EXECUTA l_op ENDFORrepeat : REPEAT l_op UNTIL cond_opread : READ LPAREN l_param RPARENwrite : PRINT LPAREN l_a_param RPARENfunc : FUNCTION ID LPAREN l_param RPAREN l_op ENDFUNCTION\n                | FUNCTION ID LPAREN RPAREN l_op ENDFUNCTIONfunc_call : ID LPAREN l_a_param RPAREN\n                      | ID LPAREN RPARENl_param : ID\n                   | ID COMMA l_paraml_a_param : CONST\n                     | ID\n                     | ar_op\n                     | func_call\n                     | l_a_param COMMA CONST\n                     | l_a_param COMMA ID'
    
_lr_action_items = {'FUNCTION':([0,4,205,211,],[6,6,-129,-128,]),'ID':([0,2,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28,29,30,31,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,66,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,202,203,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[7,7,-5,7,35,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,7,53,61,61,65,-6,67,73,79,81,83,85,87,89,92,94,96,98,100,102,73,105,-43,-44,-45,-46,105,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,61,7,137,140,143,146,149,152,156,159,162,165,168,171,174,177,180,183,186,189,7,192,7,-130,197,-127,-126,105,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,7,-114,7,-116,207,209,-129,-128,-115,7,7,7,7,7,-117,7,-119,7,-118,7,-120,-121,-123,-122,-124,]),'PRINT':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[25,25,-5,25,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,25,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,25,25,25,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,25,-114,25,-116,-129,-128,-115,25,25,25,25,25,-117,25,-119,25,-118,25,-120,-121,-123,-122,-124,]),'READ':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[26,26,-5,26,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,26,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,26,26,26,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,26,-114,26,-116,-129,-128,-115,26,26,26,26,26,-117,26,-119,26,-118,26,-120,-121,-123,-122,-124,]),'REPEAT':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[27,27,-5,27,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,27,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,27,27,27,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,27,-114,27,-116,-129,-128,-115,27,27,27,27,27,-117,27,-119,27,-118,27,-120,-121,-123,-122,-124,]),'RETURN':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[28,28,-5,28,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,28,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,28,28,28,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,28,-114,28,-116,-129,-128,-115,28,28,28,28,28,-117,28,-119,28,-118,28,-120,-121,-123,-122,-124,]),'IF':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[29,29,-5,29,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,29,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,29,29,29,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,29,-114,29,-116,-129,-128,-115,29,29,29,29,29,-117,29,-119,29,-118,29,-120,-121,-123,-122,-124,]),'WHILE':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[30,30,-5,30,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,30,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,30,30,30,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,30,-114,30,-116,-129,-128,-115,30,30,30,30,30,-117,30,-119,30,-118,30,-120,-121,-123,-122,-124,]),'FOR':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,33,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,107,126,129,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,205,211,212,214,216,218,220,229,230,231,232,233,234,235,236,241,242,243,244,],[31,31,-5,31,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,31,-6,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,31,31,31,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,31,-114,31,-116,-129,-128,-115,31,31,31,31,31,-117,31,-119,31,-118,31,-120,-121,-123,-122,-124,]),'CONST':([0,2,4,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,27,28,29,30,33,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,194,199,200,201,202,203,205,211,212,213,214,215,216,217,218,219,220,229,230,231,232,233,234,235,236,241,242,243,244,],[24,24,-5,24,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,24,54,62,62,-6,68,76,80,82,84,86,88,90,91,93,95,97,99,101,76,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,62,24,138,141,144,147,150,153,155,158,161,164,167,170,175,178,181,184,187,190,24,193,24,-130,196,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,24,-114,24,-116,208,210,-129,-128,-115,221,24,223,24,225,24,227,24,24,-117,24,-119,24,-118,24,-120,-121,-123,-122,-124,]),'$end':([1,3,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,32,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,201,212,230,232,234,236,241,242,243,244,],[0,-2,-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-1,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,-114,-116,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'UNTIL':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,52,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,201,212,230,232,234,236,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,106,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,-114,-116,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'ENDIF':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,201,206,212,230,232,234,236,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,199,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,-114,-116,212,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'ELSE':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,201,212,230,232,234,236,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,200,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,-114,-116,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'ENDWHILE':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,199,201,212,230,232,234,236,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,201,-114,-116,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'ENDFUNCTION':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,195,199,201,204,212,230,232,234,236,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,205,-114,-116,211,-115,-117,-119,-118,-120,-121,-123,-122,-124,]),'ENDFOR':([5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,34,53,54,55,56,67,68,69,70,71,72,75,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,130,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,199,201,212,222,224,226,228,230,232,234,236,237,238,239,240,241,242,243,244,],[-3,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-7,-8,-9,-10,-11,-12,-4,-43,-44,-45,-46,-37,-38,-39,-40,-41,-42,-131,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-130,-127,-126,-125,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,-114,-116,-115,230,232,234,236,-117,-119,-118,-120,241,242,243,244,-121,-123,-122,-124,]),'ASSIGN':([7,65,],[36,127,]),'LPAREN':([7,25,26,35,53,67,73,],[37,50,51,66,37,37,37,]),'PLUS':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[38,44,38,44,38,44,38,44,38,44,38,44,38,44,38,44,38,44,38,44,38,44,44,38,44,38,44,38,44,38,44,38,44,38,38,44,38,44,38,44,38,44,38,44,38,44,]),'TIMES':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[39,45,39,45,39,45,39,45,39,45,39,45,39,45,39,45,39,45,39,45,39,45,45,39,45,39,45,39,45,39,45,39,45,39,39,45,39,45,39,45,39,45,39,45,39,45,]),'MINUS':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,40,46,46,40,46,40,46,40,46,40,46,40,46,40,40,46,40,46,40,46,40,46,40,46,40,46,]),'DIV':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[41,47,41,47,41,47,41,47,41,47,41,47,41,47,41,47,41,47,41,47,41,47,47,41,47,41,47,41,47,41,47,41,47,41,41,47,41,47,41,47,41,47,41,47,41,47,]),'DIVIDE':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[42,48,42,48,42,48,42,48,42,48,42,48,42,48,42,48,42,48,42,48,42,48,48,42,48,42,48,42,48,42,48,42,48,42,42,48,42,48,42,48,42,48,42,48,42,48,]),'MOD':([7,24,53,54,61,62,67,68,73,76,137,138,140,141,143,144,146,147,149,150,152,153,155,156,158,159,161,162,164,165,167,168,170,171,174,175,177,178,180,181,183,184,186,187,189,190,],[43,49,43,49,43,49,43,49,43,49,43,49,43,49,43,49,43,49,43,49,43,49,49,43,49,43,49,43,49,43,49,43,49,43,43,49,43,49,43,49,43,49,43,49,43,49,]),'LOWER':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,108,114,120,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'GREATER':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,109,115,121,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'LEQUAL':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,110,116,122,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'GEQUAL':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,111,117,123,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'EQUAL':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,112,118,124,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'NEQUAL':([18,19,20,21,22,23,61,62,63,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,],[-7,-8,-9,-10,-11,-12,113,119,125,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,]),'RPAREN':([18,19,20,21,22,23,37,66,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,128,130,196,197,198,],[-7,-8,-9,-10,-11,-12,75,129,-135,130,-131,-134,-136,-137,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,132,133,-132,194,-130,-138,-139,-133,]),'COMMA':([18,19,20,21,22,23,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,130,192,193,196,197,207,208,209,210,],[-7,-8,-9,-10,-11,-12,-135,131,-131,-134,-136,-137,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,131,134,-130,202,203,-138,-139,213,215,217,219,]),'ATUNCI':([18,19,20,21,22,23,57,58,59,60,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,],[-7,-8,-9,-10,-11,-12,107,-57,-58,-59,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,]),'EXECUTA':([18,19,20,21,22,23,58,59,60,64,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,207,208,209,210,221,223,225,227,],[-7,-8,-9,-10,-11,-12,-57,-58,-59,126,-13,-15,-21,-23,-17,-19,-25,-27,-29,-31,-33,-35,-16,-14,-24,-22,-20,-18,-28,-26,-32,-30,-36,-34,-60,-61,-96,-64,-65,-97,-68,-69,-98,-72,-73,-99,-76,-77,-100,-80,-81,-101,-63,-62,-108,-67,-66,-109,-71,-70,-110,-75,-74,-111,-79,-78,-112,-83,-82,-113,-84,-90,-102,-85,-91,-103,-86,-92,-104,-87,-93,-105,-88,-94,-106,-89,-95,-107,214,216,218,220,229,231,233,235,]),'TRUE':([29,30,36,],[58,58,70,]),'FALSE':([29,30,36,],[59,59,71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'func_l_op':([0,4,],[2,33,]),'l_op':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[3,32,34,52,136,191,195,204,206,222,224,226,228,237,238,239,240,]),'func':([0,4,],[4,4,]),'op':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'ar_op':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[8,8,8,8,55,63,63,69,77,77,63,8,139,142,145,148,151,154,157,160,163,166,169,172,173,176,179,182,185,188,8,8,8,8,8,8,8,8,8,8,8,8,]),'attr':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'write':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'read':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'func_call':([0,2,5,27,28,36,37,50,107,126,129,194,200,214,216,218,220,229,231,233,235,],[12,12,12,12,56,72,78,78,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'repeat':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'ret_op':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'if':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'while':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'for':([0,2,5,27,107,126,129,194,200,214,216,218,220,229,231,233,235,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'add':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'mul':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'sub':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'div':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'rdiv':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'mod':([0,2,5,27,28,29,30,36,37,50,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,129,194,200,214,216,218,220,229,231,233,235,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'cond':([29,30,],[57,64,]),'cond_op':([29,30,106,],[60,60,135,]),'l_a_param':([37,50,],[74,103,]),'l_param':([51,66,134,],[104,128,198,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> func_l_op l_op','program',2,'p_program','synthax.py',98),
  ('program -> l_op','program',1,'p_program','synthax.py',99),
  ('l_op -> op','l_op',1,'p_l_op','synthax.py',106),
  ('l_op -> op l_op','l_op',2,'p_l_op','synthax.py',107),
  ('func_l_op -> func','func_l_op',1,'p_func_l_op','synthax.py',114),
  ('func_l_op -> func func_l_op','func_l_op',2,'p_func_l_op','synthax.py',115),
  ('ar_op -> add','ar_op',1,'p_ar_op','synthax.py',122),
  ('ar_op -> mul','ar_op',1,'p_ar_op','synthax.py',123),
  ('ar_op -> sub','ar_op',1,'p_ar_op','synthax.py',124),
  ('ar_op -> div','ar_op',1,'p_ar_op','synthax.py',125),
  ('ar_op -> rdiv','ar_op',1,'p_ar_op','synthax.py',126),
  ('ar_op -> mod','ar_op',1,'p_ar_op','synthax.py',127),
  ('add -> ID PLUS ID','add',3,'p_add','synthax.py',131),
  ('add -> CONST PLUS ID','add',3,'p_add','synthax.py',132),
  ('add -> ID PLUS CONST','add',3,'p_add','synthax.py',133),
  ('add -> CONST PLUS CONST','add',3,'p_add','synthax.py',134),
  ('sub -> ID MINUS ID','sub',3,'p_sub','synthax.py',143),
  ('sub -> CONST MINUS ID','sub',3,'p_sub','synthax.py',144),
  ('sub -> ID MINUS CONST','sub',3,'p_sub','synthax.py',145),
  ('sub -> CONST MINUS CONST','sub',3,'p_sub','synthax.py',146),
  ('mul -> ID TIMES ID','mul',3,'p_mul','synthax.py',155),
  ('mul -> CONST TIMES ID','mul',3,'p_mul','synthax.py',156),
  ('mul -> ID TIMES CONST','mul',3,'p_mul','synthax.py',157),
  ('mul -> CONST TIMES CONST','mul',3,'p_mul','synthax.py',158),
  ('div -> ID DIV ID','div',3,'p_div','synthax.py',167),
  ('div -> CONST DIV ID','div',3,'p_div','synthax.py',168),
  ('div -> ID DIV CONST','div',3,'p_div','synthax.py',169),
  ('div -> CONST DIV CONST','div',3,'p_div','synthax.py',170),
  ('rdiv -> ID DIVIDE ID','rdiv',3,'p_rdiv','synthax.py',179),
  ('rdiv -> CONST DIVIDE ID','rdiv',3,'p_rdiv','synthax.py',180),
  ('rdiv -> ID DIVIDE CONST','rdiv',3,'p_rdiv','synthax.py',181),
  ('rdiv -> CONST DIVIDE CONST','rdiv',3,'p_rdiv','synthax.py',182),
  ('mod -> ID MOD ID','mod',3,'p_mod','synthax.py',191),
  ('mod -> CONST MOD ID','mod',3,'p_mod','synthax.py',192),
  ('mod -> ID MOD CONST','mod',3,'p_mod','synthax.py',193),
  ('mod -> CONST MOD CONST','mod',3,'p_mod','synthax.py',194),
  ('attr -> ID ASSIGN ID','attr',3,'p_attr','synthax.py',203),
  ('attr -> ID ASSIGN CONST','attr',3,'p_attr','synthax.py',204),
  ('attr -> ID ASSIGN ar_op','attr',3,'p_attr','synthax.py',205),
  ('attr -> ID ASSIGN TRUE','attr',3,'p_attr','synthax.py',206),
  ('attr -> ID ASSIGN FALSE','attr',3,'p_attr','synthax.py',207),
  ('attr -> ID ASSIGN func_call','attr',3,'p_attr','synthax.py',208),
  ('ret_op -> RETURN ID','ret_op',2,'p_ret_op','synthax.py',212),
  ('ret_op -> RETURN CONST','ret_op',2,'p_ret_op','synthax.py',213),
  ('ret_op -> RETURN ar_op','ret_op',2,'p_ret_op','synthax.py',214),
  ('ret_op -> RETURN func_call','ret_op',2,'p_ret_op','synthax.py',215),
  ('op -> ar_op','op',1,'p_op','synthax.py',219),
  ('op -> attr','op',1,'p_op','synthax.py',220),
  ('op -> write','op',1,'p_op','synthax.py',221),
  ('op -> read','op',1,'p_op','synthax.py',222),
  ('op -> func_call','op',1,'p_op','synthax.py',223),
  ('op -> repeat','op',1,'p_op','synthax.py',224),
  ('op -> ret_op','op',1,'p_op','synthax.py',225),
  ('op -> if','op',1,'p_op','synthax.py',226),
  ('op -> while','op',1,'p_op','synthax.py',227),
  ('op -> for','op',1,'p_op','synthax.py',228),
  ('cond -> TRUE','cond',1,'p_cond','synthax.py',233),
  ('cond -> FALSE','cond',1,'p_cond','synthax.py',234),
  ('cond -> cond_op','cond',1,'p_cond','synthax.py',235),
  ('cond_op -> ID LOWER ID','cond_op',3,'p_cond_op','synthax.py',244),
  ('cond_op -> ID LOWER CONST','cond_op',3,'p_cond_op','synthax.py',245),
  ('cond_op -> CONST LOWER ID','cond_op',3,'p_cond_op','synthax.py',246),
  ('cond_op -> CONST LOWER CONST','cond_op',3,'p_cond_op','synthax.py',247),
  ('cond_op -> ID GREATER ID','cond_op',3,'p_cond_op','synthax.py',248),
  ('cond_op -> ID GREATER CONST','cond_op',3,'p_cond_op','synthax.py',249),
  ('cond_op -> CONST GREATER ID','cond_op',3,'p_cond_op','synthax.py',250),
  ('cond_op -> CONST GREATER CONST','cond_op',3,'p_cond_op','synthax.py',251),
  ('cond_op -> ID LEQUAL ID','cond_op',3,'p_cond_op','synthax.py',252),
  ('cond_op -> ID LEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',253),
  ('cond_op -> CONST LEQUAL ID','cond_op',3,'p_cond_op','synthax.py',254),
  ('cond_op -> CONST LEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',255),
  ('cond_op -> ID GEQUAL ID','cond_op',3,'p_cond_op','synthax.py',256),
  ('cond_op -> ID GEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',257),
  ('cond_op -> CONST GEQUAL ID','cond_op',3,'p_cond_op','synthax.py',258),
  ('cond_op -> CONST GEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',259),
  ('cond_op -> ID EQUAL ID','cond_op',3,'p_cond_op','synthax.py',260),
  ('cond_op -> ID EQUAL CONST','cond_op',3,'p_cond_op','synthax.py',261),
  ('cond_op -> CONST EQUAL ID','cond_op',3,'p_cond_op','synthax.py',262),
  ('cond_op -> CONST EQUAL CONST','cond_op',3,'p_cond_op','synthax.py',263),
  ('cond_op -> ID NEQUAL ID','cond_op',3,'p_cond_op','synthax.py',264),
  ('cond_op -> ID NEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',265),
  ('cond_op -> CONST NEQUAL ID','cond_op',3,'p_cond_op','synthax.py',266),
  ('cond_op -> CONST NEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',267),
  ('cond_op -> ar_op LOWER ar_op','cond_op',3,'p_cond_op','synthax.py',268),
  ('cond_op -> ar_op GREATER ar_op','cond_op',3,'p_cond_op','synthax.py',269),
  ('cond_op -> ar_op LEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',270),
  ('cond_op -> ar_op GEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',271),
  ('cond_op -> ar_op EQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',272),
  ('cond_op -> ar_op NEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',273),
  ('cond_op -> ar_op LOWER ID','cond_op',3,'p_cond_op','synthax.py',274),
  ('cond_op -> ar_op GREATER ID','cond_op',3,'p_cond_op','synthax.py',275),
  ('cond_op -> ar_op LEQUAL ID','cond_op',3,'p_cond_op','synthax.py',276),
  ('cond_op -> ar_op GEQUAL ID','cond_op',3,'p_cond_op','synthax.py',277),
  ('cond_op -> ar_op EQUAL ID','cond_op',3,'p_cond_op','synthax.py',278),
  ('cond_op -> ar_op NEQUAL ID','cond_op',3,'p_cond_op','synthax.py',279),
  ('cond_op -> ID LOWER ar_op','cond_op',3,'p_cond_op','synthax.py',280),
  ('cond_op -> ID GREATER ar_op','cond_op',3,'p_cond_op','synthax.py',281),
  ('cond_op -> ID LEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',282),
  ('cond_op -> ID GEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',283),
  ('cond_op -> ID EQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',284),
  ('cond_op -> ID NEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',285),
  ('cond_op -> ar_op LOWER CONST','cond_op',3,'p_cond_op','synthax.py',286),
  ('cond_op -> ar_op GREATER CONST','cond_op',3,'p_cond_op','synthax.py',287),
  ('cond_op -> ar_op LEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',288),
  ('cond_op -> ar_op GEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',289),
  ('cond_op -> ar_op EQUAL CONST','cond_op',3,'p_cond_op','synthax.py',290),
  ('cond_op -> ar_op NEQUAL CONST','cond_op',3,'p_cond_op','synthax.py',291),
  ('cond_op -> CONST LOWER ar_op','cond_op',3,'p_cond_op','synthax.py',292),
  ('cond_op -> CONST GREATER ar_op','cond_op',3,'p_cond_op','synthax.py',293),
  ('cond_op -> CONST LEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',294),
  ('cond_op -> CONST GEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',295),
  ('cond_op -> CONST EQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',296),
  ('cond_op -> CONST NEQUAL ar_op','cond_op',3,'p_cond_op','synthax.py',297),
  ('if -> IF cond ATUNCI l_op ENDIF','if',5,'p_if','synthax.py',309),
  ('if -> IF cond ATUNCI l_op ELSE l_op ENDIF','if',7,'p_if','synthax.py',310),
  ('while -> WHILE cond EXECUTA l_op ENDWHILE','while',5,'p_while','synthax.py',321),
  ('for -> FOR ID ASSIGN ID COMMA ID EXECUTA l_op ENDFOR','for',9,'p_for','synthax.py',326),
  ('for -> FOR ID ASSIGN CONST COMMA ID EXECUTA l_op ENDFOR','for',9,'p_for','synthax.py',327),
  ('for -> FOR ID ASSIGN ID COMMA CONST EXECUTA l_op ENDFOR','for',9,'p_for','synthax.py',328),
  ('for -> FOR ID ASSIGN CONST COMMA CONST EXECUTA l_op ENDFOR','for',9,'p_for','synthax.py',329),
  ('for -> FOR ID ASSIGN ID COMMA ID COMMA CONST EXECUTA l_op ENDFOR','for',11,'p_for','synthax.py',330),
  ('for -> FOR ID ASSIGN CONST COMMA ID COMMA CONST EXECUTA l_op ENDFOR','for',11,'p_for','synthax.py',331),
  ('for -> FOR ID ASSIGN ID COMMA CONST COMMA CONST EXECUTA l_op ENDFOR','for',11,'p_for','synthax.py',332),
  ('for -> FOR ID ASSIGN CONST COMMA CONST COMMA CONST EXECUTA l_op ENDFOR','for',11,'p_for','synthax.py',333),
  ('repeat -> REPEAT l_op UNTIL cond_op','repeat',4,'p_repeat','synthax.py',350),
  ('read -> READ LPAREN l_param RPAREN','read',4,'p_read','synthax.py',356),
  ('write -> PRINT LPAREN l_a_param RPAREN','write',4,'p_write','synthax.py',362),
  ('func -> FUNCTION ID LPAREN l_param RPAREN l_op ENDFUNCTION','func',7,'p_func','synthax.py',373),
  ('func -> FUNCTION ID LPAREN RPAREN l_op ENDFUNCTION','func',6,'p_func','synthax.py',374),
  ('func_call -> ID LPAREN l_a_param RPAREN','func_call',4,'p_func_call','synthax.py',386),
  ('func_call -> ID LPAREN RPAREN','func_call',3,'p_func_call','synthax.py',387),
  ('l_param -> ID','l_param',1,'p_l_param','synthax.py',395),
  ('l_param -> ID COMMA l_param','l_param',3,'p_l_param','synthax.py',396),
  ('l_a_param -> CONST','l_a_param',1,'p_l_a_param','synthax.py',403),
  ('l_a_param -> ID','l_a_param',1,'p_l_a_param','synthax.py',404),
  ('l_a_param -> ar_op','l_a_param',1,'p_l_a_param','synthax.py',405),
  ('l_a_param -> func_call','l_a_param',1,'p_l_a_param','synthax.py',406),
  ('l_a_param -> l_a_param COMMA CONST','l_a_param',3,'p_l_a_param','synthax.py',407),
  ('l_a_param -> l_a_param COMMA ID','l_a_param',3,'p_l_a_param','synthax.py',408),
]
